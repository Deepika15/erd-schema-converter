// Uses Tesseract.js to extract text from an image and return as schema placeholder
const Tesseract = require('tesseract.js');
const fs = require('fs');
const { OpenAI } = require('openai');

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

module.exports = async function extractSchemaFromImage(filepath) {
    try {
        // 1. OCR: Read image buffer and extract text
        const imageBuffer = fs.readFileSync(filepath);
        const { data: { text } } = await Tesseract.recognize(imageBuffer, 'eng');
        if (!text || text.trim().length < 10) {
            return '-- OCR did not extract enough text from the image. Please check the image quality.';
        }
        // 2. Use OpenAI to convert extracted text to SQL schema
        const prompt = `You are an expert database architect. Given the following ERD diagram description, generate the most accurate and complete SQL schema (with CREATE TABLE statements, primary and foreign keys, and correct types).\n\nERD Description (from OCR):\n${text}\n\nSQL Schema:`;
        const completion = await openai.chat.completions.create({
            model: 'gpt-3.5-turbo',
            messages: [
                { role: 'system', content: 'You are an expert in database design and SQL.' },
                { role: 'user', content: prompt }
            ],
            max_tokens: 800,
            temperature: 0.2
        });
        const aiSchema = completion.choices[0]?.message?.content?.trim();
        return aiSchema || '-- No schema generated by AI.';
    } catch (err) {
        return `-- Error during OCR or AI conversion --\n${err.message}`;
    }
};
